// Code generated by go-bindata.
// sources:
// public/index.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _publicIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5a\xfd\x92\xdb\x36\x92\xff\x7f\x9e\xa2\xcd\xba\xca\x68\x2a\x22\xa9\xb1\xb3\xb7\xf6\x8c\xa4\xdc\x64\x9c\xac\x73\x95\x1d\xa7\xa2\xc9\x6d\x5c\xa9\x54\x0a\x02\x9a\x22\x22\x10\x60\x00\x50\xb2\xce\xeb\x7b\xa1\x7b\x84\xfb\x6f\x9f\xec\xaa\x01\x52\xa2\x3e\x66\xe2\x38\xb7\xe7\xaa\x64\x24\x11\x68\xf4\xe7\xaf\x3f\xc0\xf1\x93\x97\xaf\x6f\xef\xdf\x7c\xfb\x25\x94\xbe\x52\xd3\xb3\x71\xf7\x07\x99\x00\xc5\xf4\x62\x92\xa0\x4e\xa6\x67\x00\x00\xe3\x0a\x3d\x03\x5e\x32\xeb\xd0\x4f\x92\xef\xef\xbf\x4a\x9f\x27\xd3\xb3\xde\xb3\xd2\xfb\x3a\xc5\x5f\x1b\xb9\x9a\x24\xdc\x68\x8f\xda\xa7\x7e\x53\x63\x02\xb7\xf1\xdb\x24\xf1\xf8\xd6\xe7\x74\xc8\x75\x47\xa8\xf1\x45\xa0\x73\x9a\xcc\x0f\xe9\xf7\x37\xe9\xad\xa9\x6a\xe6\xe5\x5c\x61\x02\xbc\xa3\xf4\xf5\x97\x13\x14\x0b\xdc\xdb\xa9\x59\x85\x93\x64\x25\x71\x5d\x1b\xeb\x7b\x8b\xd7\x52\xf8\x72\x22\x70\x25\x39\xa6\xe1\xcb\x10\xa4\x96\x5e\x32\x95\x3a\xce\x14\x4e\x2e\xb3\xd1\x56\x18\x25\xf5\x12\x4a\x8b\xc5\x24\x21\x5e\xae\xf2\x5c\xe3\x6a\x69\xb4\x67\x4b\x8f\x19\x37\x55\x5e\xb0\x95\xe4\x46\x67\x92\x9b\x04\x2c\xaa\x49\xe2\x4a\x63\x3d\x6f\x3c\xd0\xef\x49\xde\x91\x7a\x92\xa6\x70\x23\x84\xf4\xd2\x68\xa6\xa0\x30\xda\x3b\x48\xd3\xe9\xe1\x41\xe7\x79\x1e\x9e\x65\x0b\x63\x16\x0a\x59\x2d\x5d\x38\x88\x3b\xf7\x79\xc1\x2a\xa9\x36\x93\x6f\xef\x3f\x9d\x31\xed\xae\x3e\x1b\x8d\x86\x9f\x8d\x46\xd2\x33\x25\xf9\xf0\xcf\xa3\x11\xfd\x17\xbf\x7d\xc2\xaa\xfa\xda\x35\x73\xd2\xab\x62\x5e\xea\x21\xdf\x58\xa9\x94\xe4\xe7\xe1\xc0\xf8\x8f\xf8\x3d\x77\x7e\xa3\xd0\x95\x88\xfe\x1c\xc8\x46\x93\xf3\x60\x1a\xee\xdc\xf9\x11\x73\xc9\x07\x33\xf7\xe9\x1d\xb3\xd6\xac\x03\x1f\x44\x6f\x72\xb7\x53\xdc\x8d\xf6\xd2\x19\x2e\x99\xaa\xad\x59\x58\x56\x55\x68\x1d\xd4\x8a\x71\x3c\x4f\xfe\x08\x7b\xe7\x64\x1f\x2f\x34\xcb\xe6\xc6\x78\xe7\x2d\xab\xb9\xd0\xd1\x4e\x46\xfb\x94\xad\xd1\x99\x0a\xf3\xcf\xb2\x51\xf6\x8c\x48\xec\xfd\x9c\x55\x52\x67\x44\xf7\x77\xb1\xd0\xe3\x21\x9a\x7f\xbb\x38\x79\xdc\x73\x14\x3a\xb7\xff\xa3\x73\x3b\x77\x09\x64\xa6\x5b\x4e\x32\x87\x7e\x08\xd9\x02\x3d\xbc\xeb\xb1\x07\x20\xa4\xab\x15\xdb\x5c\x81\x36\x1a\xaf\xb7\x8f\xde\xef\xed\xbc\x62\x85\x47\x1b\xf7\xc7\xcf\x07\x54\x82\x1a\xd6\x28\x17\xa5\xbf\x82\xb9\x51\xe2\x90\xd2\x38\xef\x31\xf4\x21\xd2\x7a\xb6\xc8\xde\xbd\xcb\x5e\x9a\x8a\x49\xfd\xfe\x7d\x4e\x7c\x32\xcf\xcb\x20\x65\x4b\xc6\x4b\xaf\x70\xfa\xef\x6c\xc5\x66\xdc\xca\xda\xa7\xa4\x12\x78\x35\xbb\x9f\x81\x6b\x6a\xb4\x29\x37\x66\x29\x11\xbe\x35\xb7\xe3\x3c\x2e\x3e\x1b\xe7\x84\x48\xd3\xb3\xf1\xdc\x88\xcd\xf4\xec\x6c\x2c\xe4\x0a\xb8\x62\xce\x45\xa4\x61\x52\xa3\xed\x0e\xa0\xa5\x68\xbb\xc7\xd6\xac\x93\x9d\x46\xc7\xe5\x65\xf7\x40\x99\x85\xe9\x3d\x09\x4f\xd9\xe3\xc6\x4b\xba\xbd\x73\x65\x16\x81\xb5\x03\x02\xf4\xef\x0e\x61\x05\xdd\x36\x18\xbb\x8a\x29\x35\xdd\x39\x3f\xec\xbc\xff\xbc\x75\xff\x71\x1e\x17\xed\xf3\x92\xb3\x1e\xdb\x79\x79\xd9\xfb\xa6\xd9\xea\x63\x19\xf7\x1a\xe6\x5e\xa7\xb5\x95\x15\xb3\x9b\xf0\x59\x2d\x92\xe9\x2b\x53\xe1\xde\x89\x47\x54\xdd\x55\x9e\x2f\xa4\x2f\x9b\x79\xa0\xd8\x3b\x21\x2f\x9d\x77\xad\xd5\x8e\x0e\x8a\x5b\x4e\xa8\x69\x2c\xbb\xa5\x05\x83\x82\xb5\x0b\x53\xa6\x7c\x32\x1d\xe7\x72\x0a\x7f\x91\xfe\x55\x33\x7f\x58\x27\x27\x39\xf4\x6b\xe9\x3d\xda\x43\x16\x8f\xd8\x92\xba\x38\x34\xfe\x29\xa6\x5a\x72\x2d\x47\xff\xd6\xa3\xf8\x98\xad\xb6\xe6\x89\x6e\x8b\xb6\xfd\xd6\x73\xda\x03\xaf\xdc\x73\x67\x95\x56\x22\xbd\x1c\x41\xfb\xc9\x14\x85\x43\x9f\x5e\x1e\xfa\x6a\x79\x39\x0d\x41\x33\xa3\xa0\x81\xdb\xa0\xfe\x7d\x3f\x39\x24\xcd\x14\x5a\x0f\xe1\xff\x41\x01\x50\x37\x4a\xa5\x96\xe2\xbf\x3b\xec\xd9\x29\xa5\x94\x4f\xa7\x2f\xb1\x32\x9a\xa0\x95\x12\xd9\x38\x2f\x9f\x9e\x58\x56\x6f\x23\x8b\xaa\x07\x87\x3e\x99\xbe\x31\x8d\x85\x36\x9e\xa5\xa3\xdf\xc0\x9b\x2b\x18\xe7\xf5\x6f\xee\x5f\x1c\xef\x3f\xb1\x71\x9c\x0b\x79\x18\x0b\x42\x9d\x20\x2e\xfc\xf4\x6f\x25\xf3\xc4\x85\x2f\xa5\xfb\x7c\x9c\x0b\x7f\x6a\x99\x98\xde\x97\xd2\xd1\x32\xa6\x81\xcd\x1b\x87\x60\x0a\x78\x75\x7f\xff\x2d\xcc\xbc\x95\xdc\xc3\xbd\x65\xda\x51\x7d\x01\x33\xe4\x8d\x95\x7e\x03\x1e\x79\xa9\x8d\x32\x8b\xcd\x10\xd6\xa5\xe4\x25\xed\x6f\x1c\x0a\xf0\x06\x3c\x5b\x40\x8d\xa6\x56\x08\x4c\x0b\xf0\x96\xf1\x25\xf8\x12\x2b\x90\x1a\x9c\xac\xa4\x62\x16\x2a\xa6\x35\x5a\x60\x0e\x9c\x37\x56\xea\x05\xb0\xad\xdc\x1a\x18\xcc\xad\x59\x3b\xb4\xd9\x38\x17\xe2\x21\xe9\x36\x90\x04\x00\x4d\x1e\x11\xee\x2b\x69\x9d\x1f\x82\xf4\xe7\x0e\xaa\x86\x97\x50\x32\x4b\x60\xe9\x0d\x29\x1c\xac\x14\x24\x2e\xa7\x82\xcb\x46\xf6\x2d\x2e\x1a\xe2\x30\x72\x73\x05\x95\x71\x9e\xd6\x54\x46\xa0\xd5\x1d\x63\x8e\x60\x6d\x25\x05\x92\xd8\x16\xd6\xd2\x97\xa0\x0d\x48\xed\xd1\x16\x8c\x23\x51\xaa\x98\x66\x0b\x6c\x91\xde\x1b\xcb\x16\x98\x91\x0e\x8d\x16\xc3\xa0\x0b\x53\xe1\x8e\xde\x80\x0e\x52\x1b\x7a\x70\x5b\x5a\x53\xc9\xa6\x4a\xe7\xcc\xa1\xb8\x88\x14\x5a\xed\xac\xa5\x52\x60\x91\xf2\x0d\xe0\x0a\x35\xac\x4b\x24\xb5\xfa\xe0\x70\x8c\x73\x74\x64\x07\xa9\x21\xa9\xad\x5c\x31\x8f\x81\xf3\x24\x83\xfb\x52\x5a\x31\x84\x19\x2b\x98\x95\x20\x5f\xcf\x82\x79\x5e\xcf\xe0\x87\x61\x24\xc2\x8d\xd6\xc8\x7d\x54\x83\xbc\x55\xa6\x11\x43\x70\x25\xb3\xd1\x90\x6e\xa3\xf9\x9e\x30\xc0\xb8\x35\xce\x41\x2c\x33\xdd\x10\x9c\x81\x39\x92\x2d\x2b\x66\x97\x28\xc0\x68\x30\x1a\xa1\x62\xbc\x94\xba\xd5\xd4\x1c\xb9\xa9\xd0\x45\xb7\x60\x73\x85\xb4\x8a\x29\x05\xe4\x85\x2d\x25\xd2\x12\xc2\x1c\x95\x59\x43\x61\x2c\x08\xf4\x4c\x2a\xf7\x88\x33\xdc\xcb\x2a\xa8\xbc\x66\x5a\xf2\x47\xdc\xe1\xce\xd4\x18\x34\xe1\xa2\x0f\xcb\x5f\x1b\xd2\x9b\x3e\xf7\x50\x5b\xc6\xbd\xe4\x4c\x91\x53\x4a\x0f\x96\x2a\x72\x8b\x0e\x18\xac\x4b\xa3\x10\xe6\x8d\xe6\x25\x79\x02\xdb\xd5\xb7\xb4\x08\x9d\x77\x74\xf6\x1c\xa1\x46\x5b\x18\x5b\xb5\x1a\x14\xa8\xbd\x2c\x36\xc0\x60\x25\x9d\xf4\xc6\x66\x70\xb3\x60\x52\x0f\xc1\x7d\xa0\x78\xe3\x9c\x62\xfb\x00\x06\x9f\x1e\x06\xf6\x21\x38\x8d\xeb\x08\x94\xbb\x28\x25\x05\x9b\xb5\x0b\x61\x3d\x4b\x5d\x53\x53\x38\x93\xa1\x1c\xda\x55\x8c\x06\x8f\x4a\x75\xce\x48\xdf\x1d\x6a\x01\xbf\x36\x68\x25\x06\xe9\x18\xb8\x1a\xb9\x2c\x24\x07\x11\xaa\x1d\x30\xb4\x33\x50\x04\xa3\xd5\x66\x18\xdd\x51\x16\xf0\xfd\x77\xdf\x00\xbe\xad\x95\xe4\x92\x1c\xba\xdd\x87\x22\xa2\xca\x80\x62\xc5\x34\x1e\x92\x59\x72\x01\x8e\x97\x58\xb1\xd6\x24\x6b\x46\x2e\xe0\xe4\x42\x77\xa1\x28\x1a\x8e\x50\x1b\xe7\xe4\x5c\x2a\x42\x1e\x0a\x44\x46\xe9\x2c\xf5\x25\xa6\x95\x14\x82\x60\xc6\x7b\xc6\x97\xae\x85\x22\xe7\xad\xac\x83\x4b\x45\xe6\xa8\x8c\x73\x20\xcc\x5a\x07\x0f\x51\xc4\x3b\x3d\x19\x42\xc5\x96\xa4\x84\x80\x4d\xab\x46\x69\xb4\xc1\x21\xbd\x01\x64\x2b\x74\xc2\x9a\xba\x96\x7a\x91\x1d\xa3\x70\x3d\xbd\x37\x50\x5b\x92\xd8\x83\x2f\x99\x1f\x76\xaa\x24\xbd\x39\x18\x73\x23\x70\x1a\x01\x34\xdd\x02\x68\xda\x01\xe8\x15\x24\x15\x7b\x9b\xb2\x05\x4e\x3e\x51\xfe\x5a\x37\xd5\x1c\xed\xcf\xa6\xf8\xd9\x05\x74\x70\x9f\x2c\xfc\x75\x32\xce\x03\x11\x88\x29\xb5\x03\x5a\xb2\x93\xdb\x19\x2a\x78\x82\x87\x31\x56\xd3\xaa\x71\x7e\x9c\x63\x35\x8d\xb6\x23\x05\xf4\xec\x17\x56\x96\x84\x65\xe4\x72\x1a\xdf\xfa\x96\xc9\xa3\xc3\xbb\x73\x0f\xec\x7b\x52\x0b\x5f\xfb\x60\x34\x6d\xbc\xe4\x64\x33\x3a\x84\xbc\x12\x2a\x64\xda\xc5\xef\x1d\xaf\x84\x1a\xe8\x02\x22\xcc\x65\x80\x54\xca\xc9\xb6\x0a\x29\x96\x42\xa7\x73\xac\x81\xb1\xe0\x9a\x79\xfc\x76\x11\x93\x88\x01\x6e\x1a\x25\x28\xc8\x2c\x65\xcb\x00\xb8\xc1\xb3\x98\x52\x1b\xe0\x96\xea\x7d\x01\x2e\x54\xd8\x19\xbc\xb6\x72\x21\x29\x40\x45\x3f\x8f\xd3\x99\x81\xbb\x01\x53\x46\x2f\x22\x91\x18\x7d\x28\x82\xcb\x32\xbd\x5d\x48\x21\x74\x11\xa4\xe3\x16\x19\x11\x9f\x6f\x8e\xea\xce\xf5\x7a\x9d\x59\x26\x08\x36\x2c\x3a\x64\x96\x4a\x7f\x93\x35\xcb\x5c\xb1\x79\xa8\x13\x43\x86\x8a\xd8\xed\xf2\x64\xfa\x5d\x5c\x0c\xdf\xb5\xab\xa9\x92\x0a\x12\x36\x5e\x2a\xf9\x9f\x28\x60\xd7\x28\x90\xd4\x6b\x4b\xc8\x4e\x0b\x82\xd8\x73\xe9\x1d\x14\xd6\x54\x9d\x56\xcf\xdd\x7e\x7e\x39\x69\xa4\xf3\x15\xc1\x0d\xe5\x0a\xa3\x05\x86\x6c\x2b\x8b\x98\x13\x63\x6c\x45\xa7\x8f\x99\x3a\x44\x71\xcd\x2c\xd3\x46\x0a\xb8\x33\x2d\x2f\x2d\x84\xb9\xc0\x4b\x6c\xae\x1c\xae\xd0\x12\x5e\x7a\x8f\x55\xed\x1d\x70\x56\x21\x34\x75\x6b\x1c\xca\xb6\xb2\xaa\x15\x56\xa8\x7d\x50\xab\xcb\xe0\x8d\x69\x80\x33\x1d\x10\x50\xfa\x90\xeb\x79\xd4\xb8\x86\xa6\xa6\x6e\xa8\x2b\xcf\x2c\xd5\x07\x9d\xc1\xea\xd3\xb2\x95\x4f\xa7\xaf\xcc\x1a\x84\xc1\x08\x86\xb0\x36\x76\x79\x1a\x11\x6f\x9c\x6b\x28\x47\x90\x47\xae\x11\x4a\xb6\x22\xb5\x02\xae\xa4\x82\x35\xce\x43\x02\x1d\x38\xb6\x19\x02\x59\x2d\x3b\x68\x28\x2e\xda\xe8\x2b\x99\x83\xe7\x3b\xe7\x74\xa0\xe4\x12\xe1\x32\x3b\xb5\x67\x08\x4f\x1f\xf8\x3d\xcb\xb2\x21\x3c\x3f\xf9\x30\xaa\x77\x97\x60\xb6\x47\x51\x59\x75\xb8\x38\x83\x57\x6c\x15\x11\x4c\xba\x21\xac\xf1\x9c\x52\x75\x6b\xcd\x10\x6e\xf0\x22\xba\xcc\x41\xb0\x49\xdd\xd9\xf3\xdc\xf5\x4a\xad\x63\xd7\xf9\x1b\xd5\x05\x2c\x66\xee\xb0\xc3\x1d\x85\xc0\x29\x29\xf2\x64\xfa\xd8\xd3\xe0\xf4\x04\x43\xbe\x44\x28\xa8\x42\x03\x2f\xa9\x1f\x3b\x64\xc0\x9c\xaa\x6c\x95\x9c\x7e\xd1\x42\x4a\x81\x9e\x97\x48\x35\x64\xd7\x9f\x1f\xb1\x47\x6a\x3b\xc9\xc4\x7e\xab\xfe\x7b\x56\x13\xfb\xd9\x38\x57\xf2\x34\x73\x21\x95\xb5\x85\x41\x2c\xd7\x98\xb5\x72\x15\x8d\x12\x93\x44\x80\xd6\x5d\x26\x0a\xa0\xde\x4f\xc7\x5b\x18\x8d\x65\x35\x59\x29\xaa\x29\xd8\x80\xac\xf9\xa0\xef\xb4\x24\xda\x32\xb1\x56\x9b\x18\x8d\x16\x85\xb4\xc8\x03\xa6\x1c\x37\x91\x0f\x49\xed\xd0\x37\xf5\x4e\x41\xe3\x66\xea\xc6\x79\x33\xfd\xa0\x2d\xbf\xa1\xa5\xd7\x9a\x63\xc7\xac\x45\x8e\x72\x85\x3b\xad\x91\x6f\x6c\x09\x51\xf5\x1e\x43\xbc\x03\x1c\x5f\x4a\xbd\x70\x57\x47\x74\x1f\xf4\x99\xfe\xc1\xb3\x90\xa0\x03\x68\xb6\x83\x93\xe0\x89\x0f\xc8\x13\x8a\xda\x90\x2d\x3b\xde\xbc\x81\xbe\x33\x44\x4d\xcf\x49\x16\xed\x7b\x39\xf3\x01\xd1\xfb\x9c\xfc\x05\xa9\xe2\xf0\xe8\xe0\x79\x4a\x19\xb1\x2d\x18\x65\xc7\x52\x89\x5d\x94\x06\xcb\xd2\x6f\xc8\x78\x19\xb2\xe7\x62\xbb\x97\xaa\x2d\x53\x40\x0c\xee\x36\xa7\xb7\x29\x3c\xd4\xf5\x16\xe1\x2e\xb4\x06\x61\x5f\xcc\xf6\x31\x85\x5c\x92\x2c\xcf\x03\xed\x1f\x68\xc5\x25\x18\x0b\x23\x10\x58\xa3\x16\xe4\x8e\x46\xc3\x8a\xa9\x06\x63\x8b\x64\x2d\xba\xda\xc4\x27\xf3\x88\xdd\xc4\xe2\x8e\xeb\x0f\x10\xf9\x3b\xac\x15\x15\x24\xc1\x27\x6f\x67\xb3\x6d\xfb\x58\x51\x7d\xe4\x42\xd1\x12\xe6\x73\xbd\x90\xa6\x62\x42\x13\x6c\xa1\x00\x36\x37\x2b\xdc\x16\x6e\xbd\x72\x35\x20\x41\xac\xe4\x98\x52\x8f\x70\x32\xce\x4f\x82\xca\x83\x7e\xfa\x15\x69\x5f\xed\x57\xfa\x51\xc9\x5d\xf4\xdc\x75\x8e\xb3\x3c\x8a\x84\xfc\x32\x46\x42\x2c\xa8\xb6\xde\xde\xd3\x41\xeb\x82\x1f\x5e\x2f\x3e\xbb\xfc\xd3\xb3\x7f\x1d\x8d\x46\xc9\xd6\xc6\x85\xb1\x3c\x34\xd0\x4a\x41\xd1\x58\x5f\x86\x33\x76\xdc\x06\x34\xe9\xe5\x11\xf3\xe1\xde\xfa\xc7\x15\x30\xfa\x3f\x57\x40\x4f\xf2\xd0\xd5\x90\xe8\x1f\x21\xf6\x0e\x7d\x4f\xc8\x7e\xec\x24\xe3\x7a\xfa\x3a\xfa\x7b\x00\x83\x88\xc3\x87\x58\xfa\xf1\xd9\xf0\x23\x52\x9f\xb1\xbc\x87\x98\x27\x58\xf9\x27\x65\xbe\x56\x93\x9c\x92\x1a\xf5\xf8\x5b\x1f\x1a\x3e\x9a\xc6\x2c\xfa\xc6\x6a\x7a\xda\x35\xc3\x0f\xbb\xdc\x2c\xee\xdf\x61\x9c\x65\x5a\x98\x0a\xbc\x59\x52\x39\x42\x15\x92\x0b\xc3\xe5\x1d\x76\xae\x98\x95\xa1\xf2\x09\x4e\x25\xfd\xf6\xba\x8b\x1a\xd0\x30\x85\x83\xd1\x6f\x38\x79\xc0\x56\x59\xc0\xf3\x58\x32\xb9\x43\x26\x08\x68\x77\x8e\xff\x88\xdf\x2f\xd0\xe7\xd4\xd6\x05\x76\xa9\x95\xeb\xc7\x40\x2c\xe5\x03\x90\x9e\x80\x41\xcd\x55\x23\x30\xe2\x60\xd0\x9c\x6b\xe6\x69\x0f\x0a\x1f\x11\xe1\x8b\x6d\x9b\xc5\x08\x49\x03\x20\x06\x63\xec\x53\x08\x0c\xc8\x22\x4c\x5d\xf6\x8a\x8a\x63\x80\xa7\xde\xe7\x72\xb8\x45\xd9\x90\xe8\x82\xdb\xc5\xda\xbe\x73\xbd\xbe\x07\x14\xa6\x0b\xc9\x90\x60\x6b\xa3\x24\xdf\x3c\xc2\xf4\xf7\xb5\xd1\x6d\xfa\xa7\x4d\xfd\xfc\xff\x87\x55\x3d\xdc\xab\x85\xc8\x09\xee\x52\x5f\x76\xbd\xe7\xd6\x61\xb6\xae\xd4\x36\x95\xf1\xdc\x40\xb0\xb3\x99\x37\x6d\x6e\x1c\xf6\x93\x63\x20\x1d\xcc\x56\x5b\xe3\x0d\x37\x5b\x8c\x0c\x6d\x42\x2c\xfa\xc4\x6f\x95\x40\x64\xe9\xe7\x3b\xe0\x0a\x7d\x49\xe8\xd5\xda\xa2\x48\xec\x8b\x11\x9e\x73\x43\x6d\x95\xef\xe7\xde\xd8\x29\xe1\x6e\xd2\xf4\x1f\xd2\x28\xf6\xe4\x21\x68\xdb\xfb\xa9\xeb\xc9\x0a\xa9\xc5\x8e\xf6\xb7\xe6\x16\x9c\x69\x02\xca\x30\xff\x51\x77\x23\xd3\x0f\xbc\xf3\x08\xa5\xe2\xf1\x98\x6b\x6f\xa8\xf7\x24\x76\x75\x47\x63\x18\x0a\x12\x62\x75\xd7\xe8\xa3\x83\xd2\xac\xa1\x36\x6b\xb4\x45\xa3\x28\xbe\x82\x78\xf3\xa0\xb8\xb9\xd4\x9d\xa5\x59\xe7\x0b\x51\xc1\xa9\x93\x02\xa1\x62\x0b\xc9\x29\xb5\xf8\xd2\x34\x8b\x32\x34\xa9\x61\x3e\xd8\xb8\x26\xa0\x89\xc5\x05\xb3\x82\x6a\x11\xaa\xa9\xb6\xfd\x73\x54\x55\x34\x83\x45\xe6\x33\xb8\xed\x0d\x95\x4d\x7f\x1e\xf1\xcf\x1b\x24\xd4\xb4\x57\x87\x09\x6e\x6f\xba\x19\x5b\xfa\x8a\xda\x41\xc7\x99\xdd\x80\x68\x82\x5e\xb7\xc1\x7a\x75\x9c\x7e\x9a\x07\xd2\xcf\xd7\x3e\xf4\xd8\x2d\x74\x6d\xa7\x03\xa8\x29\x96\x1e\x73\xf6\x1b\xbd\xe9\xe6\x3b\xa1\xff\x97\x15\xf5\x26\x4c\x88\xff\xb7\xbc\xd5\x6b\x12\xbd\x69\x39\x8e\x33\x8f\x38\xe3\x7b\x88\xf3\xdb\xd9\x2c\x0e\xe2\x81\xd5\xb5\x35\x94\x25\xaa\x50\xa2\x12\x02\x70\x53\x21\x84\x31\x78\xda\x4a\x17\x31\x2f\x8e\x4c\x39\x5a\x1f\x06\xf5\x6f\x3d\x6a\x3f\x6c\xa7\xe3\x5d\x87\xde\xdd\x20\x14\x88\x62\xce\xf8\x12\x1a\x47\x8f\x23\x00\x61\x9c\x9b\x74\xf7\xd8\xed\x9b\x1d\x57\x90\x84\x5b\x83\x5e\x33\x9f\xbc\x6f\x61\xea\x64\x1d\xd3\x9c\x9a\x1f\xcf\xb8\x65\xb1\x5c\x66\xfe\x09\xdc\xb5\x11\x96\x9d\x8e\xb0\x97\xe8\x6a\xe9\x83\x67\x3b\x26\xb7\x25\xf8\xee\xfe\xba\xbb\x99\xa0\x16\x2d\x0e\xd2\xa3\x58\x4c\x6f\x7a\x43\xf5\x18\x15\x24\x76\xdb\xd0\x86\xdb\x09\xbe\xc9\x20\x5c\xd1\xc4\x29\x5f\x89\xf1\xba\x25\xb6\x03\x4c\xb7\x53\xee\x38\xe3\x6c\x07\xf2\x22\x4c\x10\x8f\x67\xf0\x61\x82\xd8\x0d\x16\x77\x3d\x49\x9c\x2c\x0b\xcb\x5c\xe0\x83\xca\x81\x30\x0a\x0f\xf3\xe0\x9a\x2d\x10\x94\x61\x22\x1c\xaf\x4d\xbc\x47\x89\xa0\xce\x59\x18\xfe\xcf\x4d\xe3\xe3\xa8\x8c\x35\x42\x22\x41\x36\xf9\x2f\x2b\x0a\x63\x45\xc8\xd1\x19\x84\xea\xe1\x2d\x23\xe0\x1c\xee\xe6\x55\x24\xa8\x83\x67\x97\xb0\xdf\xdb\x65\x10\x46\x51\x71\x6c\xd3\x1b\x8f\x9a\x1a\xb5\x83\xa6\x8e\x4d\x59\xcd\x2c\x53\x0a\x55\x77\x29\x23\x8d\x76\x41\xc2\x40\x99\xb8\xad\x03\x85\x16\x22\x49\x73\x6d\x9a\xb8\x1c\x8d\xaa\xd8\x33\xaf\xc3\xc4\xd4\xb3\x25\x12\x80\x2b\x64\xce\xc3\x7f\x5d\x66\x7f\x02\x87\xbc\xd7\x33\xb5\x11\x90\x5a\x54\x21\x0b\xf6\x8b\x85\x81\xd0\x0e\x3e\x05\xcf\x6b\x28\x99\x16\xae\x24\x62\x9f\x76\x2a\x4f\x63\xc1\xe0\xf0\xe2\xe4\xf0\xa8\xbb\xea\xda\x62\x69\x77\xaf\x45\xfd\x1b\xe9\x76\xc5\xa4\x0a\xc1\x10\x9c\xc9\x22\x37\x56\xb4\xe3\xcd\xee\x16\xae\x32\xa2\x8d\x95\x78\x97\x15\xb4\x25\xf5\x62\x3b\x14\x20\x8f\x5b\x22\xd6\xfb\x34\xba\xe4\x49\x4d\x6a\xff\x1a\x2c\x83\x99\xa1\xea\x67\x63\x9a\xae\x86\x6f\xc5\x6f\xaf\xd0\xf6\x97\xb7\x17\x1b\x47\xf7\x6f\x73\x04\x81\xce\x5b\xb3\x89\x79\xc0\x19\x2a\xa7\x5c\x20\x8b\x64\x9b\x96\x86\x43\xe7\xa4\xd1\xc1\xc7\xb1\x30\x6f\xb7\x1c\x93\x02\xe2\xff\x5a\xb6\xa3\xb4\xdd\xc5\xda\x21\x1b\xcc\x87\x3a\x61\x10\x3d\xf3\x6b\x72\x04\x47\xbe\xaf\x36\xe4\x1f\x94\xb7\x2c\xac\xad\xd1\x8b\x38\x2d\xe7\x8d\xb5\xd4\xe8\xac\xd0\xba\x76\x9a\xfd\xf5\x97\xdb\xb3\xdb\xeb\x9f\x78\x72\xa4\x4c\x6a\x21\xcf\x45\xdb\xdd\x86\x85\xbb\xd2\x58\xe9\xb3\xc2\xb2\x70\x4d\x3a\x04\x8b\x74\xe6\xbe\xb1\x7b\x37\xd2\xed\xc7\xf6\xcf\xd9\xb8\x30\xc6\xef\x5e\x4c\x21\xcf\xed\x5e\x59\xa9\xa7\x9f\x70\x53\x6f\xae\xe1\xe9\x68\xf4\xfc\x13\x2d\x98\x2b\xaf\xc7\xae\x9d\x7a\x6f\x6a\x9c\x24\xac\xae\x95\xe4\x01\xe1\xf2\x5f\xd8\x8a\xc5\x87\xc9\x54\x18\xde\x10\x30\x66\x61\x32\x3e\xd0\xb8\x86\x97\xcc\xe3\xe0\x22\x5b\xa0\xff\xaa\x51\xea\x0d\x32\x3b\xb8\xc8\xbc\xa1\x66\x52\x2f\x06\x17\x17\xe3\x3c\x6e\x9e\xc2\x8d\xc2\xe5\xbf\x0c\x77\x19\x27\x4f\xa6\x07\x69\x63\xaf\x19\x1b\xd7\xd3\x1b\xa5\x28\xc7\xb7\x75\xb3\xc5\xae\x22\x32\xba\xad\xcf\xc3\x78\xde\x22\xd4\xcd\x5c\x49\x57\xa2\x80\x46\x87\x86\x96\xc5\x57\x87\x94\xe4\xa8\x1d\x0e\xb5\x89\xe9\x36\x79\x70\x3e\xf2\x3b\xfe\xed\xe5\xcb\x70\x3d\x21\x57\xc8\x4d\x45\x25\x50\x66\xec\x22\x6f\x4f\x75\xf9\x7c\x93\x6a\x9e\x3a\x96\x3f\xcb\x46\xb9\x40\x14\x99\x6d\x7a\xaf\x3c\xdc\xb6\x7b\xa9\x58\xa1\xcd\xf0\x8f\xff\xbe\xf1\xde\xca\x79\x43\x8a\x4f\xef\x8c\xa6\x07\x68\xb9\x64\x2a\x9d\x95\xcc\xe2\x8d\x92\x4b\xfc\xc7\xff\xb4\xd3\xbd\x9a\xac\x1d\xcd\x4c\x06\x7f\x92\xa6\xf0\x86\x69\x81\x6f\xb3\xbf\xa2\xb7\x72\xc9\x80\x9b\x46\x93\x13\xa4\xe9\xf4\x6c\xdf\xc2\xe1\xed\xb2\xbe\x69\xcf\x06\x45\xa3\xe3\x6d\xc0\x40\x0c\x61\x3d\x04\x7e\xd1\xbe\xc1\x35\x58\xff\xc8\x7f\x82\x09\x84\x3f\x7f\xff\x3b\xfc\xf8\xd3\x45\x56\x37\xae\xdc\xee\x18\x5c\xf4\xde\xf5\xf2\x76\x73\xf0\xe6\xd7\x3a\xdb\xb0\xdb\xc8\xc9\xd3\x17\x97\xcf\x47\x7f\x7e\x31\x82\x09\x90\xf3\xbc\x61\x1d\xab\x83\x77\x52\x5c\x75\x4f\x87\x27\xcd\xc4\x95\xe4\xcb\x8a\xd5\x57\xde\x36\x78\x7a\x49\xc0\x93\x6f\xa4\x5e\xba\x47\x16\x31\xce\x1b\xaa\x54\xef\x69\xf1\x17\xa6\xd1\x1c\xc3\xea\xf7\x17\xbd\x37\xd2\x80\x53\x92\x1e\xe0\x05\xbc\x6b\x5f\x4f\xa3\xc7\xe1\xc3\x8a\x59\xd0\x30\x01\x41\x4e\xff\x65\xac\x14\xdc\x17\x9b\x7b\xb6\xb8\x63\x15\x0e\x92\x56\xa3\x17\x3f\x8e\x7e\xda\x31\xe0\xc2\x86\x78\x99\xd5\xee\xd9\xad\xdc\x2d\x2b\x60\x02\x3b\x3b\xd0\xe1\x3a\xa3\x3a\x56\xfb\x3b\x02\x50\xa9\x1d\x5a\xff\x05\x16\xc6\xe2\xc0\x0d\x41\x5f\x5c\xc3\xfb\xc8\xb5\xcb\xc8\xb0\x30\x81\x23\xd3\x76\xcf\x59\x78\x87\x60\x02\x24\x6b\xf7\x9b\xb3\xf4\xcb\x40\x64\xca\xc4\x70\xcf\xb6\xed\xd4\x64\x02\x6d\xbb\x91\xc0\xe7\xbb\x8f\x57\xf1\xe3\x55\x72\x01\x9f\x42\x92\xe7\x15\xcf\x36\xd1\xe9\x6c\x93\x57\xd1\x98\xf9\x3a\xd4\x7e\xbf\xb8\xa4\x55\x99\x2c\x60\xb0\xce\x4c\x8d\x96\x05\xba\x3f\x9a\xf9\x2f\xc8\x3d\xbc\xa6\x5f\x7e\x4a\xfa\xee\x23\x32\x26\xc4\x97\x2b\xd4\xfe\x1b\xe9\x3c\xf5\xff\x83\xe4\xe5\xeb\xbf\xb6\xef\xf4\x7e\x63\x98\x40\x91\x0c\xa1\x18\x42\xc1\x94\xc3\xd6\x66\xef\x01\x95\x43\x78\x07\xc5\x80\x54\x72\xf6\xfe\x62\xd0\x61\xd5\x10\xd6\x52\x0b\xb3\x1e\x42\x12\x19\xfd\xb9\xe5\xf2\x67\xaa\x48\xa8\xf4\x73\xc9\xc5\xf5\xd9\x16\xa7\xce\xc6\xda\xb4\x1f\xc7\x04\xa5\x63\x59\x2d\xc0\x59\x3e\x39\x14\x36\x08\x99\x77\x3e\x9b\xc4\xd4\x3d\x49\x6a\xe3\x42\x71\x74\xc5\xe6\xce\xa8\xc6\xe3\x35\x28\x2c\xfc\x55\xfa\xe2\xc5\x8b\x17\xf5\xdb\xeb\x84\x52\xf2\x24\x49\x20\x9f\x46\xac\x1e\xe7\xdb\x03\x63\x10\xe7\x8f\x45\x71\x1e\x5f\x4a\x1c\x87\xf7\x9a\xa7\xff\x1b\x00\x00\xff\xff\x8b\x16\x66\xc0\x53\x2d\x00\x00")

func publicIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_publicIndexHtml,
		"public/index.html",
	)
}

func publicIndexHtml() (*asset, error) {
	bytes, err := publicIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "public/index.html", size: 11603, mode: os.FileMode(436), modTime: time.Unix(1501176421, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"public/index.html": publicIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"public": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{publicIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

